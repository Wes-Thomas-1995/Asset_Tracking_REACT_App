"""
Django settings for DRF__API project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
import dotenv
from pathlib import Path
from sshtunnel import SSHTunnelForwarder


BASE_DIR        = Path(__file__).resolve().parent.parent                                    # Build paths inside the project like this: BASE_DIR / 'subdir'.
SECRET_KEY      = 'django-insecure-3#y$fz1@e93e(9g&dbfq@pjhkoqlw^%-l7#dp$a(t)u7)$0o+&'      # SECURITY WARNING: keep the secret key used in production secret!
DEBUG           = True                                                                      # SECURITY WARNING: don't run with debug turned on in production!
ALLOWED_HOSTS   = []

env_path = os.path.join(os.path.dirname(__file__), '../API_CONNECTIONS/.env')
env_path_2 = os.path.join(os.path.dirname(__file__), '../API_OHLC/.env')
dotenv.load_dotenv(dotenv_path=env_path)                                                                     # Load environment variables from .env file
dotenv.load_dotenv(dotenv_path=env_path_2)


MASTER_API_KEY = os.getenv("MASTER_API_KEY")
MASTER_API_SEC = os.getenv("MASTER_API_SEC")

SSH_HOST        = os.getenv("SSH_HOST")
SSH_USERNAME    = os.getenv("SSH_USERNAME")
SSH_PASSWORD    = os.getenv("SSH_PASSWORD")
REMOTE_BIND_HOST= os.getenv("REMOTE_BIND_HOST")
REMOTE_BIND_PORT= os.getenv("REMOTE_BIND_PORT")
DB_NAME         = os.getenv("DB_NAME")
DB_USER         = os.getenv("DB_USER")
DB_PASSWORD     = os.getenv("DB_PASSWORD")
DB_HOST         = os.getenv("DB_HOST")
DB_PORT         = os.getenv("DB_PORT")
 

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # The default port for a React app
    "http://127.0.0.1:3000",
]

CORS_ALLOW_METHODS = [
    "GET",
    "POST",
    "OPTIONS",
    "DELETE",
    "PUT",
]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'API_CONNECTIONS.apps.APIConnectionsConfig',  # Ensure this matches the app's AppConfig
    'API_OHLC.apps.ApiOhlcConfig',  # Ensure this matches the app's AppConfig
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'DRF__API.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DRF__API.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases









SSH_DETAILS     = { "SSH_HOST"          : str(SSH_HOST),
                    "SSH_USERNAME"      : str(SSH_USERNAME),
                    "SSH_PASSWORD"      : str(SSH_PASSWORD),
                    "REMOTE_BIND_HOST"  : str(REMOTE_BIND_HOST),
                    "REMOTE_BIND_PORT"  : 10186}

DB_DETAILS      = { "NAME"              : str(DB_NAME),
                    "USER"              : str(DB_USER),
                    "PASSWORD"          : str(DB_PASSWORD),
                    "HOST"              : str(DB_HOST),
                    "PORT"              : ''}




def start_ssh_tunnel():

    global tunnel
    tunnel = SSHTunnelForwarder((SSH_DETAILS["SSH_HOST"]),  ssh_username        =SSH_DETAILS["SSH_USERNAME"],
                                                            ssh_password        =SSH_DETAILS["SSH_PASSWORD"],
                                                            remote_bind_address =(SSH_DETAILS["REMOTE_BIND_HOST"], SSH_DETAILS["REMOTE_BIND_PORT"]),
                                                            local_bind_address  =('127.0.0.1',))

    tunnel.start()
    DB_DETAILS["PORT"] = str(tunnel.local_bind_port)

start_ssh_tunnel()

DATABASES       = {'default':  {'ENGINE'    : 'django.db.backends.postgresql',
                                'NAME'      : DB_DETAILS['NAME'],
                                'USER'      : DB_DETAILS['USER'],
                                'PASSWORD'  : DB_DETAILS['PASSWORD'],
                                'HOST'      : DB_DETAILS['HOST'],
                                'PORT'      : DB_DETAILS['PORT']}}


import atexit
atexit.register(lambda: tunnel.stop())









# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
